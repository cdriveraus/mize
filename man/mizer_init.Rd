% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mizer.R
\name{mizer_init}
\alias{mizer_init}
\title{Initialize the Optimizer.}
\usage{
mizer_init(opt, par, fg)
}
\arguments{
\item{opt}{Optimizer, created by \code{\link{make_mizer}}.}

\item{par}{Vector of initial values for the function to be optimized over.}

\item{fg}{Function and gradient list. See the documentaion of
\code{\link{mizer}}.}
}
\value{
Initialized optimizer.
}
\description{
Prepares the optimizer for use with a specific function and starting point.
}
\details{
Should be called after creating an optimizer with \code{\link{make_mizer}}
and before beginning any optimization with \code{\link{mizer_step}}. Note
that if \code{fg} and \code{par} are available at the time
\code{\link{mizer_step}} is called, they can be passed to that function
and initialization will be carried out automatically, avoiding the need to
call \code{mizer_init}.

Details of the \code{fg} list can be found in the 'Details' section of
\code{\link{mizer}}.
}
\examples{

# Create an optimizer
opt <- make_mizer(method = "L-BFGS")

# Function to optimize and starting point defined after creating optimizer
rosenbrock_fg <- list(
  fn = function(x) { 100 * (x[2] - x[1] * x[1]) ^ 2 + (1 - x[1]) ^ 2  },
  gr = function(x) { c( -400 * x[1] * (x[2] - x[1] * x[1]) - 2 * (1 - x[1]),
                         200 *        (x[2] - x[1] * x[1])) })
rb0 <- c(-1.2, 1)

# Initialize with function and starting point before commencing optimization
opt <- mizer_init(opt, rb0, rosebrock_fg)

# Finally, can commence the optimization loop
par <- rb0
for (iter in 1:3) {
  res <- mizer_step(opt, par, rosenbrock_fg, iter)
  par <- res$par
  opt <- res$opt
}

}

